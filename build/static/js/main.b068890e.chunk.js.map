{"version":3,"sources":["requests.js","axios.js","Row.js","Banner.js","Nav.js","App.js","reportWebVitals.js","index.js"],"names":["API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomancenMovies","fetchDocumentaries","instance","axios","create","baseURL","Row","title","fetchUrl","isLargeRow","useState","movies","setMovies","trailerUrl","setTrailerUrl","useEffect","a","get","request","data","results","fetchData","className","map","movie","onClick","console","log","movieTrailer","name","original_name","then","url","urlParams","URLSearchParams","URL","search","catch","error","handleClick","src","poster_path","backdrop_path","alt","id","videoId","opts","height","width","playerVars","autoplay","Banner","setMovie","RandomNetflixMovie","Math","floor","random","length","style","backgroundSize","backgroundImage","backgroundPosition","overview","Nav","show","handleShow","window","addEventListener","scrollY","removeEventListener","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b068890e.chunk.js","sourcesContent":["const API_KEY = \"b2130a09ad9539447ea980f9902dcf0b\";\r\n\r\nconst requests= {\r\n  fetchTrending:`/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n  fetchNetflixOriginals:`/discover/tv?api_key=${API_KEY}&with_networks=213`,\r\n  fetchTopRated:`movie/top_rated?api_key=${API_KEY}&language=en-Us`,\r\n  fetchActionMovies:`/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n  fetchComedyMovies:`/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n  fetchHorrorMovies:`/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n  fetchRomancenMovies:`/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n  fetchDocumentaries:`/discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n}\r\n\r\nexport default requests;","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"https://api.themoviedb.org/3\",\r\n});\r\n\r\n\r\nexport default instance;","import React , { useState, useEffect} from 'react';\r\nimport YouTube from 'react-youtube';\r\nimport movieTrailer from 'movie-trailer';\r\n\r\nimport  axios  from \"./axios\";\r\nimport \"./Row.css\"\r\n\r\nconst imageUrl = \"https://image.tmdb.org/t/p/original/\"\r\n\r\nfunction Row({title , fetchUrl , isLargeRow}) {\r\n  const [movies , setMovies] = useState([]);\r\n  const [trailerUrl, setTrailerUrl] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const request = await axios.get(fetchUrl);\r\n      setMovies(request.data.results)\r\n      return request;\r\n    }\r\n    fetchData()\r\n  }, [fetchUrl]); \r\n\r\n  const opts = {\r\n    height: \"390\",\r\n    width: \"100%\",\r\n    playerVars: {\r\n      autoplay:1,\r\n    }\r\n  }\r\n  \r\n  const handleClick = (movie) => {\r\n    console.log(movie)\r\n    if (trailerUrl) {\r\n      setTrailerUrl(\"\");\r\n    } else {\r\n      movieTrailer(movie?.title || movie?.name || movie.original_name || \"\")\r\n        .then((url) => {\r\n          \r\n          const urlParams = new URLSearchParams(new URL(url).search);\r\n          setTrailerUrl(urlParams.get(\"v\"));\r\n        })\r\n        .catch((error) => console.log(error))\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <h2>{title}</h2>\r\n\r\n    <div className=\"row__posters\">\r\n      \r\n\r\n      {movies.map(movie => ( \r\n          <img  \r\n            key={movie.id}\r\n            onClick={() => handleClick(movie)}\r\n            className={`row__poster ${isLargeRow && \"row__posterLarge\"}`}\r\n            src={`${imageUrl}${isLargeRow ? movie.poster_path:movie.backdrop_path}`} \r\n            alt={movie.name} />\r\n        ))}\r\n    </div>\r\n    {trailerUrl &&<YouTube videoId={trailerUrl} opts={opts} /> } \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Row\r\n","import React, {useEffect,useState} from 'react';\r\nimport axios from './axios';\r\nimport requests from './requests'\r\nimport \"./Banner.css\"\r\nfunction Banner() {\r\n\r\n  const [movie, setMovie] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n\r\n      const request = await axios.get(requests.fetchNetflixOriginals);\r\n      \r\n      const RandomNetflixMovie = Math.floor(Math.random() * request.data.results.length - 1);\r\n\r\n      setMovie(request.data.results[RandomNetflixMovie]);\r\n\r\n      return request;\r\n    }\r\n    fetchData()\r\n  }, [])\r\n\r\n  return (\r\n    <header className=\"banner\"\r\n      style={{\r\n        backgroundSize:\"cover\",\r\n        backgroundImage: `url(\r\n          \"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\")`,\r\n        backgroundPosition: \"center center\",\r\n      }}\r\n    >\r\n      <div className=\"banner__contents\">\r\n\t\t\t\t<h1 className=\"banner__title\">\r\n\t\t\t\t\t{movie?.title || movie?.name || movie.original_name}\r\n\t\t\t\t</h1>\r\n\r\n        <div className=\"banner__buttons\">\r\n          <button className=\"banner__button\">Play</button>\r\n          <button className=\"banner__button\">My List</button>\r\n        </div>\r\n\r\n        <h2 className=\"banner__description\">\r\n           {movie.overview}\r\n        </h2>\r\n\r\n      </div>  \r\n      <div className=\"banner__fadeBottom\"></div>\r\n\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Banner\r\n","import React , {useState,useEffect} from 'react';\r\nimport './Nav.css'\r\n\r\nfunction Nav() {\r\n    const [show, handleShow] = useState(false);\r\n\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", () => {\r\n      if (window.scrollY > 100) {\r\n        handleShow(true);\r\n      } else handleShow(false);\r\n    });\r\n    return () =>{\r\n      window.removeEventListener(\"scroll\",[]);\r\n    };\r\n  })\r\n\r\n\r\n  return (\r\n    <div className={`nav ${show && \"nav__black\"}`}>\r\n      <img \r\n        className=\"nav__logo\"\r\n        src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/Netflix_2015_logo.svg/1200px-Netflix_2015_logo.svg.png\"\r\n        alt=\"\" />\r\n        <img \r\n          src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/0c/Netflix_2015_N_logo.svg/551px-Netflix_2015_N_logo.svg.png\"\r\n          alt=\"\" className=\"nav__avatar\" />\r\n       \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Nav\r\n","import  React from \"react\";\n\nimport  requests  from \"./requests.js\";\n\nimport  Row  from \"./Row\";\nimport Banner from './Banner';\nimport Nav from './Nav'\n\nimport './App.css';\n\n\nfunction App() {\n \n  return (\n    <div className=\"App\">\n      <Nav />\n      <Banner />\n      <Row \n        title={\"NETFLIX ORIGINALS\"} \n        fetchUrl={requests.fetchNetflixOriginals}\n        isLargeRow/>\n      <Row title={\"Trending Now\"} fetchUrl={requests.fetchTrending} />\n      <Row title={\"Top Rated\"} fetchUrl={requests.fetchTopRated} />\n      <Row title={\"Action Movies\"} fetchUrl={requests.fetchActionMovies} />\n      <Row title={\"Comedy movies\"} fetchUrl={requests.fetchComedyMovies} />\n      <Row title={\"Horror movies\"} fetchUrl={requests.fetchHorrorMovies} />\n      <Row title={\"Romance movies\"} fetchUrl={requests.fetchRomancenMovies} />\n      <Row title={\"Documentaries\"} fetchUrl={requests.fetchDocumentaries} />\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\nexport default reportWebVitals;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}